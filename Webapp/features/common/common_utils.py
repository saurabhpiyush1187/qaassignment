from features.common.RequestBuilder import RequestBuilder



class MICommonUtils:
    request_builder= RequestBuilder()

    def is_reponsegenerated(self, pobj_reponse):
        """
            :param pstr_reponse: Response generated by a call
            :type pstr_reponse: String

            :return: Boolean - This method returns True or False based on the response.
            Examples:
            	|  return self.mi_common_utils.is_reponsegenerated(self.response)

            """
        try:
            if  pobj_reponse == "":
                return False
            else:
                return True
        except Exception as e:
            print(e)

    def is_responsevalid(self, pstr_reponse):
        """
            Description:
            	|  This method takes the Response Object as a Parameter.
            	|  It returns True or False based on the response status code.

            :param pstr_reponse: Response generated by a call
            :type pstr_reponse: Object

            :return: Boolean - This method returns True or False based on the response status code.
            Examples:
            	|  return self.mi_common_utils.is_responsevalid(self.response)

            """
        try:
            int_status_code = self.request_builder.get_response_statuscode(pstr_reponse)
            if int_status_code == 200 or int_status_code == 201:
                return True
            else:
                return False
        except Exception as e:
            print(e)

